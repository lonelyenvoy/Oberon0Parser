module Sort;

    (* Calculates the length of an array. *)
    procedure length(a: array 100 of integer; endingValue: integer; var result: integer);
        var
            i: integer;
        begin
            i := 0;
            (* Loop until the ending value in the given array is found. *)
            while i < 100 do
                if a[i] = endingValue then
                    result := i + 1;
                    i := 100
                end;
                i := i + 1
            end;
        end length;

    (* Swap two integers. *)
    procedure swap(var a: integer; var b: integer);
        var
            temp: integer;
        begin
            temp := a;
            a := b;
            b := temp;
        end swap;

    (* Do bubble sort on an array. *)
    procedure bubbleSort(var a: array 100 of integer);
        var
            n, swapped, i: integer;
        begin
            length(A, -1, n);
            swapped := 1;
            i := 0;
            while swapped = 1 do
                swapped := 0;
                while i < n do
                    if a[i-1] > a[i] then
                        swap(a[i-1], a[i]);
                        swapped := 1
                    end;
                    i := i + 1
                end
            end;
        end bubbleSort;

end Sort.
